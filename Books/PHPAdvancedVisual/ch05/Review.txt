1. Inheritance is the ability to use one class definition as
the basis of another class definition.

- Inheritance is a way by which one or more classes can be derived from
a base class

class ParentClass {
  ....
}

class SubClass1 extends ParentClass {

}

2. Polymorphism is the ability of parent and sub-classes to
define methods of the same name. Method execution is based on
the class definition of the method.

3. Access control (visibility) controls the accessibility of
class members (attributes and methods) outside the class and in
subclasses of class.

public, private, protected


4. Scope resolution operator (::) is used to access class
members through classes as opposed through instances of the
class (objects)

Ex1: static members

class Class1 {
  public static $_ein = 743578;
  const companyName = 'ACME';

}

echo Class1::_$ein;
echo Class1::companyName;

Ex2: self (keyword used within class)
self keyword is to classes as $this pseudo-variable is to objects

class Visitors {
  private static $visitors = 0;

  public static function getVisitors() {
    return self::$visitors; // cannot use $this since visitors is static
  }

}

echo Visitors::getVisitors();

Ex3 : parent

class ParentClass {
  function __construct() {
    echo 'using parent constructor' . PHP_EOL;
  }
}

class SubClass extends ParentClass {

  function __construct() {
    parent::__construct();
    echo 'using sub-class constructor' . PHP_EOL;
  }

}

Ex4 : constants
class ShopProduct {
  const AVAILABLE = 1;
  const OUT_OF_STOCK = 2;
  .....


}

echo ShopProduct::AVAILABLE;
